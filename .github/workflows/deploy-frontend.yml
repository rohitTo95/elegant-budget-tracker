name: Deploy Frontend

on:
  push:
    branches:
      - main
    paths:
      - 'Frontend/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: Frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./Frontend
        run: npm ci

      - name: Build frontend (Vite)
        working-directory: ./Frontend
        run: npm run build
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}

      - name: Verify build
        working-directory: ./Frontend
        run: |
          if [ ! -d "dist" ]; then
            echo "‚ùå Build failed - dist directory not found"
            exit 1
          fi
          echo "‚úÖ Build successful"
          ls -la dist/

      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: './Frontend/dist'

      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          PATHS: "/*"
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Wait for CloudFront invalidation to complete
        run: |
          echo "üîÑ Creating CloudFront invalidation..."
          INVALIDATION_ID=$(aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*" \
            --query 'Invalidation.Id' --output text)

          echo "üÜî Invalidation ID: $INVALIDATION_ID"
          echo "‚è≥ Polling CloudFront invalidation status..."

          for i in {1..20}; do
            STATUS=$(aws cloudfront get-invalidation \
              --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
              --id "$INVALIDATION_ID" \
              --query 'Invalidation.Status' --output text)

            echo "‚åõ Attempt $i - Status: $STATUS"

            if [ "$STATUS" == "Completed" ]; then
              echo "‚úÖ Invalidation completed"
              break
            fi

            sleep 15
          done

          if [ "$STATUS" != "Completed" ]; then
            echo "‚ùå Invalidation did not complete in time"
            exit 1
          fi

      - name: Verify site deployment
        run: |
          SITE_URL="https://${{ secrets.CLOUDFRONT_DOMAIN }}"
          echo "üåê Testing deployment at $SITE_URL"
          
          if curl -f -s "$SITE_URL" > /dev/null; then
            echo "‚úÖ Frontend deployment verification successful"
          else
            echo "‚ùå Frontend deployment verification failed"
            exit 1
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

